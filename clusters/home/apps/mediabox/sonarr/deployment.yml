---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/component: server
  name: sonarr
  namespace: mediabox
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonarr
      app.kubernetes.io/name: sonarr
      app.kubernetes.io/component: server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/name: sonarr
        app.kubernetes.io/component: server
      namespace: mediabox
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: UMASK
          value: "0022"
        - name: UMASK_SET
          value: "0022"
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: S6_READ_ONLY_ROOT
          value: "1"
        - name: SONARR__PORT
          value: "8989"
        - name: SONARR__POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: cnpg-sonarr-app
              key: host
        - name: SONARR__POSTGRES_MAIN_DB
          value: sonarr_main
        - name: SONARR__POSTGRES_LOG_DB
          value: sonarr_log
        - name: SONARR__POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cnpg-sonarr-app
              key: user
        - name: SONARR__POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cnpg-sonarr-app
              key: password
        image: ghcr.io/onedr0p/sonarr:4.0.5.1710
        imagePullPolicy: IfNotPresent
        name: sonarr
        ports:
        - containerPort: 8989
          name: sonarr
          protocol: TCP
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 568
          runAsNonRoot: true
          runAsUser: 568
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: /ping
            port: 8989
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /dev/shm
          name: devshm
        - mountPath: /shared
          name: shared
        - mountPath: /tmp
          name: tmp
        - mountPath: /var/logs
          name: varlogs
        - mountPath: /var/run
          name: varrun
        - mountPath: shows
          name: media
          subPath: tv
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      restartPolicy: Always
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
        - 568
      serviceAccount: default
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: sonarr
            app.kubernetes.io/name: sonarr
            app.kubernetes.io/component: server
        maxSkew: 1
        nodeAffinityPolicy: Honor
        nodeTaintsPolicy: Honor
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pvc-sonarr-config
      - emptyDir:
          medium: Memory
          sizeLimit: 8Gi
        name: devshm
      - emptyDir: {}
        name: shared
      - emptyDir:
          medium: Memory
          sizeLimit: 8Gi
        name: tmp
      - emptyDir:
          medium: Memory
          sizeLimit: 8Gi
        name: varlogs
      - emptyDir:
          medium: Memory
          sizeLimit: 8Gi
        name: varrun
      - name: media
        nfs:
          path: /mnt/storage0/media
          server: sunbeam.layertwo.lan
