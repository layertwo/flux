---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-jellyfin-config
  namespace: mediabox
  labels:
    app: "jellyfin"
    app.kubernetes.io/instance: "jellyfin"
    app.kubernetes.io/name: "jellyfin"
    release: "jellyfin"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 64Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: mediabox
  labels:
    app: "jellyfin"
    app.kubernetes.io/instance: "jellyfin"
    app.kubernetes.io/name: "jellyfin"
    release: "jellyfin"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 8096
      protocol: TCP
      targetPort: 8096
  selector:
    pod.name: main
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-autodiscovery
  namespace: mediabox
  labels:
    app: "jellyfin"
    app.kubernetes.io/instance: "jellyfin"
    app.kubernetes.io/name: "jellyfin"
    release: "jellyfin"
    service.name: "autodiscovery"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: autodiscovery
      port: 7359
      protocol: UDP
      targetPort: 7359
  selector:
    pod.name: main
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  labels:
    app: "jellyfin"
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/name: jellyfin
    release: jellyfin
  name: jellyfin
  namespace: mediabox
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: jellyfin
      app.kubernetes.io/name: jellyfin
      pod.name: main
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/cnpg: 12c2f2443588dc1ade2410eac85c5b0b1751a3c6abef1e92e3aebf8896f77509
        checksum/configmaps: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/mariadb: 09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52
        checksum/mongodb: 09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52
        checksum/persistence: 3b59f2976681401889147a54db8b823729b6154ac8475535f06e2346180158fc
        checksum/redis: 013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/services: 8bc7cf1c7b30a068a71f13f174f3d9754e6232bfa6096a5a6be4003b7ab81423
        checksum/solr: 29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347
      labels:
        app: "jellyfin"
        app.kubernetes.io/instance: jellyfin
        app.kubernetes.io/name: jellyfin
        pod.lifecycle: permanent
        pod.name: main
        release: jellyfin
      namespace: mediabox
    spec:
      automountServiceAccountToken: false
      containers:
      - name: jellyfin
        env:
        - name: TZ
          value: UTC
        - name: UMASK
          value: "0022"
        - name: UMASK_SET
          value: "0022"
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: S6_READ_ONLY_ROOT
          value: "1"
        - name: JELLYFIN_PublishedServerUrl
          value: http://127.0.0.1:8096
        image: docker.io/jellyfin/jellyfin:10.8.13@sha256:05a9734d7e83086b957c5b7a16cbb5a60b5bb8d113ffb953e57547359dd05140
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 8096
            scheme: HTTP
          initialDelaySeconds: 12
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 7359
          name: autodiscovery
          protocol: UDP
        - containerPort: 8096
          name: main
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /
            port: 8096
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 12
          successThreshold: 2
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 568
          runAsNonRoot: true
          runAsUser: 568
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /
            port: 8096
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /cache
          name: cache
        - mountPath: /config
          name: config
        - mountPath: /dev/shm
          name: devshm
        - mountPath: /shared
          name: shared
        - mountPath: /tmp
          name: tmp
        - mountPath: /config/transcodes
          name: transcode
        - mountPath: /var/logs
          name: varlogs
        - mountPath: /var/run
          name: varrun
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      nodeSelector:
        kubernetes.io/arch: amd64
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
        - 568
      serviceAccount: default
      serviceAccountName: default
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 60
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: jellyfin
            app.kubernetes.io/name: jellyfin
            pod.name: main
        maxSkew: 1
        nodeAffinityPolicy: Honor
        nodeTaintsPolicy: Honor
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: cache
        emptyDir: {}
      - name: config
        persistentVolumeClaim:
          claimName: pvc-jellyfin-config
      - name: devshm
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
      - name: shared
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
      - name: transcode
      - name: varlogs
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
      - name: varrun
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
